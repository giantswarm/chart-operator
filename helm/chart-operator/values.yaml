# For CAPI clusters this will be set to true. So charts for CNI apps can be installed.
chartOperator:
  cni:
    install: false

cluster:
  kubernetes:
    domain: cluster.local
  # is getting overwritten by the top level proxy if set
  # These values are generated via cluster-apps-operator
  proxy:
    noProxy:
    http:
    https:

clusterDNSIP: 172.31.0.10

deployment:
  requests:
    cpu: 50m
    memory: 100Mi
  limits:
    memory: 350Mi

# if explicitly set to empty string, the dnsPolicy: Default is used and tis expected that the cluster is private/closed cluster
externalDNSIP: 8.8.8.8

e2e: false

helm:
  splitClient: false
  namespaceWhitelist: []
  http:
    clientTimeout: "5s"
  kubernetes:
    waitTimeout: "120s"
    watch:
      namespace: "giantswarm"
  maxRollback: 3

image:
  registry: "docker.io"
  name: "giantswarm/chart-operator"
  tag: "[[ .Version ]]"

registry:
  domain: docker.io

pod:
  user:
    id: 1000
  group:
    id: 1000
  port: 8000
  replicas: 1

project:
  branch: "[[ .Branch ]]"
  commit: "[[ .SHA ]]"

# set the HTTP_PROXY, HTTPS_PROXY and NO_PROXY variable
proxy:
  noProxy:
  http:
  https:

# Resource names are truncated to 47 characters. Kubernetes allows 63 characters
# limit for resource names. When pods for deployments are created they have
# additional 16 characters suffix, e.g. "-957c9d6ff-pkzgw" and we want to have
# room for those suffixes.
#
# NOTE: All values under resource key need to be used with `tpl` to render them
# correctly in the templates. This is because helm doesn't template values.yaml
# file and it has to be a valid json. Example usage:
#
#     {{ tpl .Values.resource.default.name . }}.
#
resource:
  default:
    name: '{{ .Release.Name | replace "." "-" | trunc 47 }}'
    namespace: "giantswarm"
  psp:
    name: '{{ .Release.Name | replace "." "-" | trunc 47 }}-psp'

tiller:
  namespace: "kube-system"

verticalPodAutoscaler:
  enabled: true

isManagementCluster: false

# When this flag is true, chart operator runs in special mode in order to be able to run in partially deployed clusters.
# Main differences are:
# - runs on master nodes
# - runs on hostNetwork
# - tolerates all taints
# - uses API hostname to reach the API to support kube-proxy being missing
# This mode is meant to be used during bootstrap of clusters to be able to deploy basic system services
# (such as the CNI or the out-of-tree cloud controller managers) as a managed app.
# After the cluster is fully deployed, this flag should be switched to false.
bootstrapMode:
  apiServerPodPort: 443
  enabled: false

# Pod securityContext
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Container securityContext
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
